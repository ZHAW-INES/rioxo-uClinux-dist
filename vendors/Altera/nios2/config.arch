.EXPORT_ALL_VARIABLES:
############################################################################
#
# Vendor specific settings
#

CONSOLE_BAUD_RATE = 9600
LINUXTARGET = zImage

############################################################################
#
# The makefiles need to know how to do things in different contexts
# To save some pain we put it all here
#
# First settings we always want for all build
#

# ARCH = kernel,  TARGET_ARCH = uClibc

MACHINE       = nios2
ARCH          = nios2
CROSS_COMPILE = nios2-linux-uclibc-
CROSS         = $(CROSS_COMPILE)
CONFIGURE_HOST = nios2-linux-uclibc
CONFIGURE_SHARED_ENABLE := --disable-shared
CONFIGURE_SHARED_WITH   := --without-shared

CONFIG_UCLINUX=y

CC        = $(CROSS_COMPILE)gcc $(CPUFLAGS)
AS        = $(CROSS_COMPILE)as $(CPUFLAGS)
CXX       = $(CROSS_COMPILE)g++ $(CPUFLAGS)
AR        = $(CROSS_COMPILE)ar
LD        = $(CROSS_COMPILE)ld $(CPULDFLAGS)
OBJCOPY   = $(CROSS_COMPILE)objcopy
RANLIB    = $(CROSS_COMPILE)ranlib
ELF2FLT   = $(CROSS_COMPILE)elf2flt
STRIPTOOL = $(CROSS_COMPILE)strip
STRIP     = $(STRIPTOOL)

UCLINUX_BUILD_SET = 0					# have we set a special config below

# Pull in common definitions
include $(ROOTDIR)/vendors/config/common/config.arch

# These can be used by configure.
# Either configure $(CONFIGURE_OPTS)
# or     configure --host=$(TARGETARCH) --build=$(HOSTARCH) --target=$(TARGETARCH)
#
TARGETARCH    := nios2-linux-uclibc
HOSTARCH      := $(shell sh $(ROOTDIR)/tools/config.guess)

############################################################################
#
# Settings for configure / autotools
#

CONFIGURE_BUILD := $(shell sh $(ROOTDIR)/tools/config.guess)
CONFIGURE_OPTS  := \
	--host=$(CONFIGURE_HOST) \
	--build=$(CONFIGURE_BUILD) \
	--prefix=/usr \
	--sysconfdir=/etc \
	--datadir=/usr/share \
	--mandir=/usr/share/man \
	--infodir=/usr/share/info \
	--localstatedir=/var/lib \
	$(CONFIGURE_SHARED_ENABLE) \
	$(CONFIGURE_SHARED_WITH) \
	--disable-dependency-tracking \
	--enable-fast-install
ifneq ($(findstring s,$(MAKEFLAGS)),)
CONFIGURE_OPTS += --quiet
endif

# help out autotools a bit and force some tests that would otherwise
# fail because they rely on RUN tests rather than COMPILE

export ac_cv_func_calloc_0_nonnull  = yes
export ac_cv_func_malloc_0_nonnull  = yes
export gl_cv_func_malloc_0_nonnull  = yes
export ac_cv_func_realloc_0_nonnull = yes
export ac_cv_func_memcmp_working    = yes
export ac_cv_func_strnlen_working   = yes

export samba_cv_HAVE_C99_VSNPRINTF  = yes


############################################################################
#
# General purpose lib building rules,  uClibc.config uses these when
# possible
#

ifdef UCLINUX_BUILD_LIB

  ifdef CONFIG_LIB_DEBUG
	CFLAGS  :=  -O1 -g
  else
	CFLAGS  :=  -O2 -g
  endif
	CFLAGS  += $(VENDOR_CFLAGS)
	CFLAGS  += -DEMBED

	# don't want all the CFLAGS for uClibc/Config
	ARCH_CFLAGS = $(CFLAGS)
	CFLAGS  += -I$(ROOTDIR)
	CFLAGS  += -I$(ROOTDIR)/staging/usr/include
	CFLAGS  += -Dlinux -D__linux__ -D__uClinux__ -Dunix

	LDFLAGS  = $(CFLAGS) -Wl,-d -Wl,-elf2flt

	UCLINUX_BUILD_SET=1
endif

############################################################################
#
# Settings for building user apps
#

ifdef UCLINUX_BUILD_USER

	GCC_DIR = $(shell $(CC) -v 2>&1 | grep specs | sed -e 's/.* \(.*\)specs/\1\./')
	GCC_LIB = ~/buildroot/build_nios2/staging_dir/lib


  ifdef CONFIG_USER_DEBUG
	CFLAGS  :=  -O1 -g
  else
	CFLAGS  :=  -O2 -g
  endif
	CFLAGS  += $(VENDOR_CFLAGS)
	CFLAGS  += -Dlinux -D__linux__ -Dunix -D__uClinux__ -DEMBED
	CFLAGS  += -I$(ROOTDIR)
	CFLAGS  += -I$(ROOTDIR)/staging/usr/include
	CFLAGS  += -fno-builtin
	CFLAGS  += -D__adjtimex=adjtimex

	CXXFLAGS = $(CFLAGS) $(INCCXX) -fname-mangling-version-0

	LDFLAGS  = $(CFLAGS) -Wl,-d -Wl,-elf2flt -L$(ROOTDIR)/staging/usr/lib
	CXXLIBS  = $(LDPATH) $(LIBSTDCPP) $(LIBIOSTREAM) $(LIBIO) $(LIBIBERTY) \
			$(LIBC) $(LIBGCC)
	
	FLTFLAGS := -z
	export FLTFLAGS

	# for anyone still using it
	CONVERT = /bin/true

	UCLINUX_BUILD_SET=1
endif

############################################################################
#
# fall through,  do other config options perhaps
#

ifeq ($(UCLINUX_BUILD_SET),1)
	EXTRA_CFLAGS := $(CPUFLAGS)

	CXXLIBS = $(LIBSTDCPP) $(CXXSUP)
  	 
endif

############################################################################
